@page "/"
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.DropDowns
@using DropDownListWithEF.Shared.Models


<div class="row">
    <div class="col-md-4">
        <label class="control-label">Region </label>
    </div>
    <div class="col-md-4">
        <label class="control-label">Territories</label>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <SfDropDownList TValue="int?" TItem="Region" Placeholder=" -- Select a Region --">
            <SfDataManager Url="api/Region/GetRegion" Adaptor="Adaptors.WebApiAdaptor" CrossDomain="true"></SfDataManager>
            <DropDownListEvents TValue="int?" TItem="Region" ValueChange="OnRegionChange"></DropDownListEvents>
            <DropDownListFieldSettings Text="RegionDescription" Value="RegionID"></DropDownListFieldSettings>
        </SfDropDownList>
    </div>
    <div class="col-md-4">
        <SfDropDownList TValue="string" TItem="Territories" @bind-Value="@TerritoryValue" Placeholder=" -- Select a Territory --" Query="@TerritoryQuery">
            <SfDataManager Url="@TerritoryURL" Adaptor="Adaptors.WebApiAdaptor" CrossDomain="true"></SfDataManager>
            <DropDownListFieldSettings Text="TerritoryDescription" Value="TerritoryID"></DropDownListFieldSettings>
        </SfDropDownList>
    </div>
</div>

@code{
    public Query TerritoryQuery { get; set; } = null;
    public string TerritoryURL { get; set; }
    public string TerritoryValue { get; set; }

    public void OnRegionChange(ChangeEventArgs<int?, Region> args)
    {
        this.TerritoryQuery = new Query().Where(new WhereFilter() { Field = "RegionID", Operator = "equal", value = args.Value, IgnoreCase = false, IgnoreAccent = false });
        TerritoryURL = "api/Region/" + args.Value;
        this.TerritoryValue = null;
    }
}